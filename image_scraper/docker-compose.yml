services:
  parser:
    build:
      context: ./parser
      dockerfile: Dockerfile
    image: parser:${PARSER_IMAGE_TAG}
    depends_on:
      - master
      - redis
    container_name: parser-server
    environment:
      PARSER_SERVER_PORT: ${PARSER_SERVER_PORT}
      CONFIG_PATH: ${CONFIG_PATH}
    ports:
      - "${PARSER_SERVER_PORT}:${PARSER_SERVER_PORT}"
    networks:
      - backend
      - redis
    volumes:
      - uploads_data:/app/uploads

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - redis

  master:
    build:
      context: ./master
      dockerfile: Dockerfile
    image: master:${MASTER_IMAGE_TAG}
    depends_on:
      - postgres
    container_name: master-server
    environment:
      MASTER_SERVER_PORT: ${MASTER_SERVER_PORT}
    ports:
      - "${MASTER_SERVER_PORT}:${MASTER_SERVER_PORT}"
    networks:
      - backend
      - frontend
      - postgres
    volumes:
      - uploads_data:/app/uploads

  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_URL: ${POSTGRES_URL}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./master/internal/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - postgres

  client:
    build:
      context: ./client
      dockerfile: nginx/Dockerfile
    container_name: client
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    networks:
      - frontend
    volumes:
      - uploads_data:/app/uploads

networks:
  backend:
  frontend:
  redis:
  postgres:

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local
